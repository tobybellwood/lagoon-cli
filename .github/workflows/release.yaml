name: Release CLI

on:
  push:
    tags:
    - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: "0"
    - name: Set up Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version: 1.23
    - name: Build CLI
      run: |
        go install go.uber.org/mock/mockgen@v0.4.0
        make deps
        make test
    - name: Compile CLI
      run: |
        make VERSION="${GITHUB_REF##*/}" build-linux
        make VERSION="${GITHUB_REF##*/}" build-darwin
        # create the archived versions and remove anything not required for the release
        rm ./builds/README.md ./builds/release_template.md
        for BUILD in builds/*; do tar --transform="flags=r;s|${BUILD#builds/}|lagoon|" -czf "$BUILD.tar.gz" -C builds "${BUILD#builds/}"; done
    - name: Generate SBOM from Github API
      uses: advanced-security/sbom-generator-action@6fe43abf522b2e7a19bc769aec1e6c848614b517 # v0.0.2
      id: sbom
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Move SBOM to avoid dirty git
      run: mv "$GITHUB_SBOM_PATH" ./sbom.spdx.json
      env:
        GITHUB_SBOM_PATH: ${{ steps.sbom.outputs.fileName }}
    - name: Create GitHub Release
      uses: softprops/action-gh-release@c95fe1489396fe8a9eb87c0abf8aa5b2ef267fda # v2.2.1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          builds/*
          sbom.spdx.json
    - name: Attest build provenance
      uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
      with:
        subject-path: "builds/*"
